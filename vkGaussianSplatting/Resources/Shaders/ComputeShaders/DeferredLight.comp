#version 450

#extension GL_GOOGLE_include_directive: require

// LOCAL_SIZE has to be >= MAX_RSM_SIZE
#define LOCAL_SIZE 16

#define MAX_REFLECTION_LOD (8.0f - 1.0f)
#define SHADOW_BIAS 0.005f
#define SHADOW_MAP_SIZE 256.0f

layout (local_size_x = LOCAL_SIZE, local_size_y = LOCAL_SIZE, local_size_z = 1) in;

layout (binding = 0, rgba32f) uniform readonly image2D deferredPosition;
layout (binding = 1, rgba32f) uniform readonly image2D deferredNormal;
layout (binding = 2, r8ui) uniform readonly uimage2D deferredBrdf;

layout (binding = 3, rgba16f) uniform image2D hdrImage;

layout(push_constant) uniform PushConstantData
{
	uvec4 resolution;
	vec4 camPos;
} pc;

void main()
{
	uvec2 index = gl_GlobalInvocationID.xy;
	uvec2 localIndex = gl_LocalInvocationID.xy;
	
	// Make sure compute work is within bounds
	if(index.x >= pc.resolution.x || index.y >= pc.resolution.y)
		return;

	// Load G-buffers
	vec4 worldNormal = imageLoad(deferredNormal, ivec2(index)).rgba;

	// Color
	vec3 color = worldNormal.xyz;
	
	// Write color
	imageStore(hdrImage, ivec2(index), vec4(color, 1.0f));
}