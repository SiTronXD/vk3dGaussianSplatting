#version 450

#extension GL_GOOGLE_include_directive: require

#include "../Common/GaussiansStructs.glsl"
#include "../Common/CommonRadix.glsl"

layout (local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

// Work group size for upcoming passes used for radix sort
layout(constant_id = 0) const uint RS_WORK_GROUP_SIZE = 512u;

// SBO
layout(binding = 0) buffer GaussiansCullDataBuffer
{
	GaussianCullData data;
} cullData;

// SBO
layout(binding = 1) buffer RadixIndirectDispatchBuffer
{
	RadixIndirectSetupData data;
} indirectBuffer;

void main()
{
	// Temporary way of minimizing errors due to overflow
	if(cullData.data.numGaussiansToRender.x > cullData.data.numGaussiansToRender.y)
		cullData.data.numGaussiansToRender.x = cullData.data.numGaussiansToRender.y;

	//cullData.data.numGaussiansToRender.x = cullData.data.numGaussiansToRender.y;

	uint numSortElements = cullData.data.numGaussiansToRender.x;

	uint numCountThreadGroups = (numSortElements + RS_WORK_GROUP_SIZE - 1u) / RS_WORK_GROUP_SIZE;
	uint numReduceBlocks = (numCountThreadGroups + RS_WORK_GROUP_SIZE - 1u) / RS_WORK_GROUP_SIZE;
	uint numReduceElements = numReduceBlocks * BIN_COUNT;

	indirectBuffer.data.countSizeX = numCountThreadGroups;
	indirectBuffer.data.reduceSizeX = numReduceElements;
}